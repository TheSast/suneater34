// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        lmns: layer_morph_numbers_symbols {
            compatible = "zmk,behavior-mod-morph";
            label = "layer_morph_numbers_symbols";
            bindings =
                <&mo 2>,
                <&mo 3>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RALT|MOD_RGUI)>;
        };
        hkr: hold_key_repeat {
            compatible = "zmk,behavior-hold-tap";
            label = "hold_key_repeat";
            bindings =
                <&kp>,
                <&key_repeat>;

            #binding-cells = <2>;
            tapping-term-ms = <225>;
        };
        hrlm: hold_key_repeat_layer_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "hold_key_repeat_layer_morph";
            bindings =
                <&hkr LEFT_SHIFT 0>,
                <&kp RIGHT_ALT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        blete: blete {
            compatible = "zmk,behavior-mod-morph";
            label = "Mod Morph Behaviour";
            bindings =
                <&kp BACKSPACE>,
                <&kp DELETE>;

            #binding-cells = <0>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_RALT|MOD_RGUI|MOD_RCTL)>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        blm: backspace_layer_morph {
            compatible = "zmk,behavior-hold-tap";
            label = "backspace_layer_morph";
            bindings =
                <&mo>,
                <&blete>;

            #binding-cells = <2>;
            tapping-term-ms = <225>;
        };
        elm: enter_layer_morph {
            compatible = "zmk,behavior-hold-tap";
            label = "enter_layer_morph";
            bindings =
                <&lmns>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <225>;
        };
        tdls: toggle_duplicate_left_shift {
            compatible = "zmk,behavior-mod-morph";
            label = "toggle_duplicate_left_shift";
            bindings =
                <&kp LEFT_SHIFT>,
                <&kt LEFT_SHIFT>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };
        tdrs: toggle_duplicate_right_shift {
            compatible = "zmk,behavior-mod-morph";
            label = "toggle_duplicate_right_shift";
            bindings =
                <&kp RIGHT_SHIFT>,
                <&kt RIGHT_SHIFT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        tdlc: toggle_duplicate_left_ctrl {
            compatible = "zmk,behavior-mod-morph";
            label = "toggle_duplicate_left_ctrl";
            bindings =
                <&kp LEFT_CONTROL>,
                <&kt LEFT_CONTROL>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL)>;
        };
        tdrc: toggle_duplicate_right_ctrl {
            compatible = "zmk,behavior-mod-morph";
            label = "toggle_duplicate_right_ctrl";
            bindings =
                <&kp RIGHT_CONTROL>,
                <&kt RIGHT_CONTROL>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };
        tdla: toggle_duplicate_left_alt {
            compatible = "zmk,behavior-mod-morph";
            label = "toggle_duplicate_left_alt";
            bindings =
                <&kp LEFT_ALT>,
                <&kt LEFT_ALT>;

            #binding-cells = <0>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        tdra: toggle_duplicate_right_alt {
            compatible = "zmk,behavior-mod-morph";
            label = "toggle_duplicate_right_alt";
            bindings =
                <&kp RIGHT_ALT>,
                <&kt RIGHT_ALT>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
        };
        tdlg: toggle_duplicate_left_gui {
            compatible = "zmk,behavior-mod-morph";
            label = "toggle_duplicate_left_gui";
            bindings =
                <&kp LEFT_GUI>,
                <&kt LEFT_GUI>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI)>;
        };
        tdrg: toggle_duplicate_right_gui {
            compatible = "zmk,behavior-mod-morph";
            label = "toggle_duplicate_right_gui";
            bindings =
                <&kp RIGHT_GUI>,
                <&kt RIGHT_GUI>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };
        hmls: homerow_mod_left_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mod_left_shift";
            bindings =
                <&tdls>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            flavor = "tap-preferred";
        };
        hmrs: homerow_mod_right_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mod_right_shift";
            bindings =
                <&tdrs>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
            global-quick-tap;
        };
        hmlc: homerow_mod_left_ctrl {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mod_left_ctrl";
            bindings =
                <&tdlc>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            flavor = "tap-preferred";
        };
        hmrc: homerow_mod_right_ctrl {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mod_right_ctrl";
            bindings =
                <&tdrc>,
                <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <150>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            global-quick-tap;
        };
        hmla: homerow_mod_left_alt {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mod_left_alt";
            bindings =
                <&tdla>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            flavor = "tap-preferred";
        };
        hmra: homerow_mod_right_alt {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mod_right_alt";
            bindings =
                <&tdra>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            flavor = "tap-preferred";
        };
        hmlg: homerow_mod_left_gui {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mod_left_gui";
            bindings =
                <&tdlg>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            flavor = "tap-preferred";
        };
        hmrg: homerow_mod_right_gui {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_mod_right_gui";
            bindings =
                <&tdrg>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            flavor = "tap-preferred";
        };
        low_dot: lowercase_dot {
            compatible = "zmk,behavior-mod-morph";
            label = "lowercase_dot";
            bindings =
                <&kp DOT>,
                <&none>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        low_comma: lowercase_comma {
            compatible = "zmk,behavior-mod-morph";
            label = "lowercase_comma";
            bindings =
                <&kp COMMA>,
                <&none>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        fnsft: function_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "function_shift";
            bindings =
                <&kp>,
                <&none>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 20 21 22 23 24 25 26 27 28 29>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <60000>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        sl_HYP_left {
            bindings = <&sl 4>;
            key-positions = <4 24>;
            layers = <0 1 2 3>;
            slow-release;
        };

        sl_HYP_right {
            bindings = <&sl 4>;
            key-positions = <5 25>;
            layers = <0 1 2 3>;
            slow-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
      &kp B      &kp L      &kp D      &kp C  &kp V          &kp Z        &kp F      &kp O       &kp U  &low_comma
  &hmls 0 N  &hmla 0 R  &hmlc 0 T  &hmlg 0 S  &kp G          &kp Y    &hmrg 0 H  &hmrc 0 A   &hmla 0 E   &hmrs 0 I
      &kp X    &kp TAB      &kp M      &kp W  &kp J          &kp K        &kp P      &kp Q  &kp ESCAPE    &low_dot
                                    &blm 3 0  &hrlm    &lt 1 SPACE  &lt 2 ENTER
            >;

            label = "BAS";
        };

        Navigation {
            bindings = <
     &none              &none     &kp END            &none          &none          &none           &none           &none         &none            &none
  &kp HOME              &none       &none            &none  &kp PAGE_DOWN          &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW
     &none  &kp C_VOLUME_DOWN  &kp C_MUTE  &kp C_VOLUME_UP          &none    &kp PAGE_UP           &none           &none         &none            &none
                                                     &none         &tog 1          &none           &none
            >;

            label = "NAV";
        };

        Numbers {
            bindings = <
        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6        &kp F7        &kp F8        &kp F9       &kp F10
  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
       &kp F11       &kp F12       &kp F13       &kp F14       &kp F15         &kp F16       &kp F17       &kp F18       &kp F19       &kp F20
                                                   &none         &none          &tog 2         &none
            >;

            label = "NUM";
        };

        Symbols {
            bindings = <
         &kp PIPE         &kp MINUS     &kp EQUAL           &kp PLUS  &kp BACKSLASH    &kp LEFT_BRACE      &kp LEFT_BRACKET      &kp COLON      &kp RIGHT_BRACKET   &kp RIGHT_BRACE
  &kp EXCLAMATION       &kp AT_SIGN  &kp ASTERISK         &kp DOLLAR    &kp PERCENT     &kp AMPERSAND             &kp CARET       &kp HASH              &kp TILDE    &kp UNDERSCORE
     &kp QUESTION  &kp SINGLE_QUOTE     &kp GRAVE  &kp DOUBLE_QUOTES      &kp SLASH     &kp LESS_THAN  &kp LEFT_PARENTHESIS  &kp SEMICOLON  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN
                                                               &none          &none            &tog 3                 &none
            >;

            label = "SYM";
        };

        Hyper {
            bindings = <
         &none    &bt BT_PRV    &bt BT_CLR    &bt BT_NXT         &none    &none         &none         &none        &none  &none
  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &out OUT_BLE  &out OUT_USB        &none  &none
         &none   &bootloader         &none    &sys_reset         &none    &none    &sys_reset         &none  &bootloader  &none
                                                   &none         &none    &none         &none
            >;

            label = "HYP";
        };
    };
};
